Privilege Escalation:

> Privilege escalation is the process of exploiting vulnerabilities or misconfigurations in
  systems to elevate privileges from one user to another, typically to a user with
  administrative or root access on a system.
> Privilege escalation is a vital element of the attack life cycle and is a major determinant
  in the overall success of a penetration test.
> After gaining an initial foothold on a target system you will be required to elevate your
  privileges in order to perform tasks and functionality that require administrative privileges.
> The importance of privilege escalation in the penetration testing process cannot be
  overstated or overlooked. Developing your privilege escalation skills will mark you out
  as a good penetration tester.
  
Windows Kernel:

> A Kernel is a computer program that is the core of an operating system and has
  complete control over every resource and hardware on a system. It acts as a translation
  layer between hardware and software and facilitates the communication between
  these two layers.
> Windows NT is the kernel that comes pre-packaged with all versions of Microsoft
  Windows and operates as a traditional kernel with a few exceptions based on user
  design philosophy. It consists of two main modes of operation that determine access to
  system resources and hardware:
  > User Mode – Programs and services running in user mode have limited access to
    system resources and functionality.
  > Kernel Mode – Kernel mode has unrestricted access to system resources and
    functionality with the added functionality of managing devices and system memory.
    
Windows Kernel Exploitation:

> Kernel exploits on Windows will typically target vulnerabilities In the
  Windows kernel to execute arbitrary code in order to run privileged system
  commands or to obtain a system shell.
> This process will differ based on the version of Windows being targeted and
  the kernel exploit being used.
> Privilege escalation on Windows systems will typically follow the following
  methodology:
  > Identifying kernel vulnerabilities
  > Downloading, compiling and transferring kernel exploits onto the target system.
    
Tools & Environment:

> Windows-Exploit-Suggester - This tool compares a targets patch levels against the
  Microsoft vulnerability database in order to detect potential missing patches on the
  target. It also notifies the user if there are public exploits and Metasploit modules
  available for the missing bulletins.
  > GitHub: https://github.com/AonCyberLabs/Windows-Exploit-Suggester
> Windows-Kernel-Exploits - Collection of Windows Kernel exploits sorted by CVE.
  > GitHub: https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-135


Windows Kernel Exploit Practical:

Elevate Privileges:
> gain access to the target machine in msfconsole
  > getsystem - try common elevate techniques in msfconsole meterpreter
  > search suggester
    > use post/multi/recon/local_exploit_suggester
      > set session <session ID>
        > run
          > list of exploits to elevate privileges
          
          
Manual Kernel Exploit Practical:

> git clone https://github.com/AonCyberLabs/Windows-Exploit-Suggester
  > systeminfo into Report and systeminfo file -- Hotfixes Important !!!
  > Windows-Exploit-Suggester.py --database                               // Update Exploit Database
  > Windows-Exploit-Suggester.py --database <newest-database.xls file> --systeminfo <systeminfo file from victim>
    > E - exploitdb, M - Metasploit Module, * - Missing Bullitin
    
